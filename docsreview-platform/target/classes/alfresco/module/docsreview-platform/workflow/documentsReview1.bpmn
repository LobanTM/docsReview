<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://alfresco.org">
  <process id="activitiDocumentsReview1" name="Documents Review for Groups and Users" isExecutable="true">
    <extensionElements>
      <activiti:executionListener event="start" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
        <activiti:field name="script">
          <activiti:string><![CDATA[logger.log("++++++++++++++++++ START: "+"start");
          				if((typeof bpm_workflowDescription == "undefined") || bpm_workflowDescription==""){
          					execution.setVariable('bpm_workflowDescription', "review documents ");
          				}
                       	execution.setVariable('wf_approveCount', 0);	//count of approved users
                        //execution.setVariable('wf_rejectCount', 0);
                        
                        execution.setVariable('wf_actualPercent', 0);       
                        execution.setVariable('wf_actualRejectPercent', 0);
                        
                        execution.setVariable('wf_requiredPercent', 100);
                        
                        execution.setVariable('wf_reviewerCount',0);
                        execution.setVariable('wf_reviewerGroupCount',0);
                        execution.setVariable('uosw_members', null);
                        execution.setVariable('uosw_groupName', null);                        
	                    var members = new java.util.ArrayList();
	                    
	                    var assigneeUser = null;	                    
	                    var assigneeGroup = null;
                        
                        if ((typeof uosw_assigneeUsers != "undefined") && uosw_assigneeUsers){	    //bpm_assignees                    
                        	assigneeUser = uosw_assigneeUsers; 
                           	//execution.setVariable('uosw_assigneeUser', assigneeUser);
	                       	//execution.setVariable('wf_reviewerCount', assigneeUser.size());	                       	
	                       	var i = 0;
	                       	do {	                    	                       		
	                       		members.add(assigneeUser.get(i).properties["cm:userName"]);
	                       		i++;
	                       	}while (i < assigneeUser.size());		                       	
	                       	execution.setVariable('uosw_members', members);
                       	}
                       	                       	
                       	var membersByGroups = new java.util.ArrayList();
                       	if ((typeof uosw_assigneeGroups != "undefined") && uosw_assigneeGroups){		//bpm_groupAssignees                       	
	                       	assigneeGroup = uosw_assigneeGroups; 
		                    //execution.setVariable('uosw_assigneeGroup', assigneeGroup);									
                        	execution.setVariable('wf_reviewerGroupCount', assigneeGroup.size()); 
                        	
                        	var i = 0;
	                       	var groupName = assigneeGroup.get(i).properties["cm:name"];
	                       	do {	                       		                		
	                       		membersByGroups.add(assigneeGroup.get(i).properties["cm:name"]);
	                       		i++;
	                       	}while (i < assigneeGroup.size());		                       	
	                       	execution.setVariable('uosw_groupName', membersByGroups);
                       	}]]></activiti:string>
        </activiti:field>
      </activiti:executionListener>
    </extensionElements>
    <startEvent id="start" activiti:formKey="uosw:startParallel"></startEvent>
    <sequenceFlow id="flow1" sourceRef="start" targetRef="reviewTask">
      <extensionElements>
        <activiti:executionListener event="start" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[logger.log("================== start flow1: "+"wf_reviewerCount: "+wf_reviewerCount+" ----------------------  ");
                     	logger.log("================== start flow1: "+"wf_reviewerGroupCount: "+wf_reviewerGroupCount+" ----------------------  ");
                     	
                     	logger.log("***************** start flow1: "+"bpm_workflowDescription: "+bpm_workflowDescription+" *****************  ");
                     	
                     	execution.setVariable('uosw_membersCount', 0);
                     	if((typeof bpm_workflowDescription == "undefined") || bpm_workflowDescription==""){
          					execution.setVariable('bpm_workflowDescription', "review documents... ");
          				}
                     	
                     	membersUsers = new java.util.ArrayList();
                     	execution.setVariable('uosw_membersUsers', membersUsers);
                    if(uosw_members){
                    	execution.setVariable('uosw_membersUsers', uosw_members);
                    }	                     	
                     	//logger.log("------------------ bpm_package: " +bpm_package);
                     	
         			//если есть группьі	
         			if(uosw_groupName){
         				var i = 0;
         				do{
         					//установка доступа для заданного пакета документов
         					if((typeof bpm_package != "undefined") && bpm_package){
         			 			bpm_package.children[0].setPermission("Contributor", uosw_groupName.get(i));		////"GROUP_ALFRESCO_ADMINISTRATORS");         			 			
         			 		}
         			 		var groupNode = people.getGroup(uosw_groupName.get(i));
	                       	var membersGroup = people.getMembers(groupNode);	
	                       	
	                       	//получение members для каждой группьі                       		
	                       	for(var j in membersGroup){
	                      			//logger.log("----------- "+j+"--->>>> "+membersGroup[j].properties.userName);
	                      		if(membersUsers.indexOf(membersGroup[j].properties.userName)==-1){
	                            	membersUsers.add(membersGroup[j].properties.userName);
	                            }
	                        }
         			 		i++;
         			 	}while (i < uosw_groupName.size());
         			 }
         			 
         			 //если есть список користувачів
         			 if(uosw_members){	
         			 	i = 0;
         				do{
         					//установка доступа для заданного пакета документов
         					if((typeof bpm_package != "undefined") && bpm_package){
         			 			bpm_package.children[0].setPermission("Contributor", uosw_members.get(i));		//"GROUP_ALFRESCO_ADMINISTRATORS");
         			 		}
         			 		if(membersUsers.indexOf(uosw_members.get(i))==-1){
         			 			membersUsers.add(uosw_members.get(i));
         			 		}         			 		
         			 		i++;
         			 	}while (i < uosw_members.size());         			 	
         			 }	
         			 
         			 if(membersUsers){
         			 	i = 0;
         				do{         			 	
         			 		logger.log("~~~~~~~~~~~~~~~~~~ /"+i+"/: " +membersUsers.get(i)+" ~~~~~~~~~~~~~~~~~~  ");
         			 		i++;
         			 	}while (i < membersUsers.size());
         			 }
         			 
         			 execution.setVariable('uosw_membersUsers', membersUsers);
         			 execution.setVariable('uosw_membersCount', membersUsers.size());     //count of all users	
         			 execution.setVariable('wf_reviewerCount',membersUsers.size());
         			// logger.log("~~~~~~~~~~~~~~~~~~ wf_reviewerCount / "+wf_reviewerCount+" / " ~~~~~~~~~~~~~~~~~~  ");]]></activiti:string>
          </activiti:field>
        </activiti:executionListener>
      </extensionElements>
    </sequenceFlow>
    <userTask id="reviewTask" name="Review documents" activiti:assignee="${reviewAssignee}" activiti:formKey="uosw:activitiOKTask">
      <extensionElements>
        <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[if (typeof bpm_workflowDueDate != 'undefined') task.dueDate = bpm_workflowDueDate
                        if (typeof bpm_workflowPriority != 'undefined') task.priority = bpm_workflowPriority;]]></activiti:string>
          </activiti:field>
        </activiti:taskListener>
        <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[var newApprovedCount = wf_approveCount + 1;
                            execution.setVariable('wf_approveCount', newApprovedCount);                            
                            logger.log("\\\\\\\\\\\\\\\\\ complete: number of reviewers  " +newApprovedCount+" \\\\\\\\\\\\\\\\\  ");
                            
	                        var newApprovedPercentage = (newApprovedCount / wf_reviewerCount) * 100;
	                        execution.setVariable('wf_actualPercent', newApprovedPercentage);
                       		logger.log("\\\\\\\\\\\\\\\\\ complete: percent of reviewers   " +newApprovedPercentage+" \\\\\\\\\\\\\\\\\  ");]]></activiti:string>
          </activiti:field>
        </activiti:taskListener>
      </extensionElements>
      <multiInstanceLoopCharacteristics isSequential="false" activiti:collection="uosw_membersUsers" activiti:elementVariable="reviewAssignee">
        <completionCondition>${wf_actualPercent == 100}</completionCondition>
      </multiInstanceLoopCharacteristics>
    </userTask>
    <sequenceFlow id="flow2" sourceRef="reviewTask" targetRef="end"></sequenceFlow>
    <endEvent id="end"></endEvent>
  </process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_activitiDocumentsReview">
    <bpmndi:BPMNPlane bpmnElement="activitiDocumentsReview" id="BPMNPlane_activitiDocumentsReview">
      <bpmndi:BPMNShape bpmnElement="start" id="BPMNShape_start">
        <omgdc:Bounds height="35.0" width="35.0" x="30.0" y="200.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="reviewTask" id="BPMNShape_reviewTask">
        <omgdc:Bounds height="55.0" width="105.0" x="125.0" y="190.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="end" id="BPMNShape_end">
        <omgdc:Bounds height="35.0" width="35.0" x="320.0" y="200.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge bpmnElement="flow1" id="BPMNEdge_flow1">
        <omgdi:waypoint x="65.0" y="217.0"></omgdi:waypoint>
        <omgdi:waypoint x="125.0" y="217.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow2" id="BPMNEdge_flow2">
        <omgdi:waypoint x="230.0" y="217.0"></omgdi:waypoint>
        <omgdi:waypoint x="320.0" y="217.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</definitions>